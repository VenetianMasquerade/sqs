name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint with Ruff
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff Linter
        run: ruff check .

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: |
          pip install pytest pytest-fuzz

      - name: Run Tests
        run: pytest --cov=app tests/

  dependency-check:
    name: OWASP Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "FastAPI Project"
          path: "./"
          format: "HTML"
          out: "dependency-check-report"
      
      - name: Upload OWASP Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report

  penetration-test:
    name: OWASP ZAP Pen Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Start Docker Compose
        run: docker compose up -d

      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: "http://localhost:8000"
          fail_action: false

  fuzzing:
    name: Run Fuzz Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: |
          pip install pytest pytest-fuzz

      - name: Run Fuzz Tests
        run: pytest --fuzz

  documentation:
    name: Generate Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Arc42 Tools
        run: |
          sudo apt update
          sudo apt install pandoc

      - name: Generate Arc42 Documentation
        run: make docs

      - name: Upload Documentation
        uses: actions/upload-artifact@v3
        with:
          name: arc42-docs
          path: docs/

